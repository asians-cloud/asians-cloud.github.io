apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 1
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "app.fullname" . }}-sites-enabled-configmap
        - name: vault-storage
          persistentVolumeClaim:
            claimName: "vault-storage"
        {{ if .Values.pvc.enabled }}
        {{- toYaml .Values.pvc.volumes | nindent 8 }} 
        {{ end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }} 
      containers:
        - name: nginx
          image: nginx:stable
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 512Mi
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["chainlit", "run", "app.py", "--host=0.0.0.0", "--port=9000", "--headless"]
          ports:
            - name: cs-helper
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
                path: /
                port: 9000 
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: vault-storage
              mountPath: /vault/secrets/
            {{ if .Values.pvc.enabled }}
            {{- toYaml .Values.pvc.volumeMounts | nindent 12 }}
            {{ end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-config
          resources:
            {{- toYaml .Values.resources | nindent 12 }} 
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm: 
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  {{- include "app.selectorLabels" . | nindent 18 }}
              topologyKey: "kubernetes.io/hostname"
            weight: 100
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
